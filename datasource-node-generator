#!/usr/bin/env node
'use strict'

const fs = require('fs')

var code = `var express = require('express')
var bodyParser = require('body-parser')
var router = express.Router()

// create application/json parser
var jsonParser = bodyParser.json()

/**
 * @param {{e.RequestHandler}} jsonParser
 * @param {{createCol:{index:number,amount:number,source:string}}} req.body
 */
  router.post('/aftercreatecol', jsonParser, function (req, res, next) {

  // TODO: If you want to use this method implement your code here
  res.json({'status': 'OK'})
})

/**
 * @param {{e.RequestHandler}} jsonParser
 * @param {{changes:[{row:number,column:number,newValue:string,meta:{row:number,col:number,visualRow:number,visualCol:number,prop:number,row_id:number,col_id:any}}], source:String}} req.body
 */
router.post('/afterchange', jsonParser, function (req, res, next) {

  // TODO: If you want to use this method implement your code here
  res.json({'status': 'OK'})
})

/**
 * @param {{e.RequestHandler}} jsonParser
 * @param {{createRow:{index:number,amount:number,source:string}}} req.body
 */
  router.post('/aftercreaterow', jsonParser, function (req, res, next) {

  // TODO: If you want to use this method implement your code here
  res.json({'status': 'OK'})
})

/**
 * @param {{e.RequestHandler}} jsonParser
 * @param {{tmp:{column:string,order:ASC|DESC|nul}}} req.body
 */
router.post('/aftercolumnsort', jsonParser, function (req, res, next) {

  // TODO  insert implementation here
  res.json({'data': 'ok'})
})

/**
 * @param {{e.RequestHandler}} jsonParser
 * @param {{tmp:{columns:array,target:number}}} req.body
 */
router.post('/aftercolumnmove', jsonParser, function (req, res, next) {

  // TODO  insert implementation here
  res.json({'data': 'ok'})
})

/**
 * @param {{e.RequestHandler}} jsonParser
 * @param {{sort:[{key:string,values[any]}], filter:[key:string,value:string]}} req.query
 */
router.get("/data", function(req, res, next) {
  res.json({ data: data, columns: colNames, colOrder: colOrder });
});



module.exports = router
`

var generate = (name) => {
  if (name !== '') {
    fs.writeFile('../routes/' + name + '.js', code, (err) => {
      if (err) {
        console.log('Can not create file')
        program.exit(-1)
      } else {
        console.log('File has been created in routes folder')
      }
    })
  }
}

const program = require('commander')
program
  .version('0.0.1')
  .description('Generate express js hot controller')
  .action(generate)

program
  .parse(process.argv)

